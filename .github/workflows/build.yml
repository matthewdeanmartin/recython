name: Publish

#on:
#  release:
#    types:
#      - published
on: [ push ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install poetry and pipx
      run: |
        pip install poetry && pip install pipx

    - name: Install global dependencies
      run: |
        pipx install isort && pipx install black && pipx install bandit && \
        pipx install pylint && pipx install pre-commit && pipx install poetry

    - name: Install Dependencies
      run: poetry install --with dev

    - name: Run Makefile
      run: make check
    - name: Run make
      run: poetry run make publish
    - name: Upload Package
      uses: actions/upload-artifact@v3.1.2
      with:
        name: packages
        path: dist/
        if-no-files-found: error
        retention-days: 1
  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
           ubuntu-latest,
           windows-latest,
           macos-latest
        ]
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry setuptools cython cibuildwheel
    - name: Build source distribution
      # run: python setup.py sdist
      run: poetry build --format=sdist
    - name: Build wheel
      run: cibuildwheel --output-dir wheelhouse
      env:
        # don't need on macos yet?
        # CIBW_BEFORE_ALL_MACOS: "$CIBW_BEFORE_ALL_LINUX && rustup target add aarch64-apple-darwin"
        # getting rust/openssl failures on i686
        CIBW_SKIP: "cp27-* pp* *-manylinux_i686 *musllinux*"
        CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
        # cp36-* cp37-* cp38-* cp39-* cp310-*
        CIBW_BUILD: cp311-* cp312-*
        CIBW_BEFORE_BUILD: pip install cython
        # Getting double builds. (wheel already exists)
        # CIBW_ARCHS_MACOS: auto universal2
        # CIBW_ARCHS_MACOS: x86_64 universal2 arm64
        CIBW_BUILD_VERBOSITY: 1
        CIBW_BEFORE_ALL_LINUX: >
              if command -v apt-get; then
                curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain stable && apt-get install -y openssl
              elif command -v yum; then
                curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain stable && yum install -y openssl-devel
              elif command -v apk; then
                curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain stable && apk add openssl
              fi
    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: wheelhouse/*.whl
    - name: Upload sdist artifact
      uses: actions/upload-artifact@v3
      with:
        name: sdist
        path: dist/*.tar.gz
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/recython
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
     # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Download sdist artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: sdist
          path: dist
      - name: Get packages
        uses: actions/download-artifact@v3.0.2
        with:
          name: wheels
          path: wheelhouse
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
